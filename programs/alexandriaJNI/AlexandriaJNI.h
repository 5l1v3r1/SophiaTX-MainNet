/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class AlexandriaJNI */

#ifndef _Included_AlexandriaJNI
#define _Included_AlexandriaJNI
#ifdef __cplusplus
extern "C" {
#endif
/*
 * Class:     AlexandriaJNI
 * Method:    generatePrivateKey
 * Signature: ()[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_generatePrivateKey
      (JNIEnv *, jclass);

/*
 * Class:     AlexandriaJNI
 * Method:    generatePrivateKeyFromBrainKey
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_generatePrivateKeyFromBrainKey
      (JNIEnv *, jclass, jstring);

/*
 * Class:     AlexandriaJNI
 * Method:    getPublicKey
 * Signature: ([B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_getPublicKey
      (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    getTransactionDigest
 * Signature: (Ljava/lang/String;[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_getTransactionDigest
      (JNIEnv *, jclass, jstring, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    signDigest
 * Signature: ([B[B)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_signDigest
      (JNIEnv *, jclass, jbyteArray, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    addSignature
 * Signature: (Ljava/lang/String;[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_AlexandriaJNI_addSignature
      (JNIEnv *, jclass, jstring, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    verifySignature
 * Signature: ([B[B[B)Z
 */
JNIEXPORT jboolean JNICALL Java_AlexandriaJNI_verifySignature
      (JNIEnv *, jclass, jbyteArray, jbyteArray, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    encryptMemo
 * Signature: (Ljava/lang/String;[B[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_AlexandriaJNI_encryptMemo
      (JNIEnv *, jclass, jstring, jbyteArray, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    decryptedMemo
 * Signature: (Ljava/lang/String;[B[B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_AlexandriaJNI_decryptedMemo
      (JNIEnv *, jclass, jstring, jbyteArray, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    publicKeyToString
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_AlexandriaJNI_publicKeyToString
      (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    stringToPublicKey
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_stringToPublicKey
      (JNIEnv *, jclass, jstring);

/*
 * Class:     AlexandriaJNI
 * Method:    privateKeyToWif
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_AlexandriaJNI_privateKeyToWif
      (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    wifToPrivateKey
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_wifToPrivateKey
      (JNIEnv *, jclass, jstring);

/*
 * Class:     AlexandriaJNI
 * Method:    toBase58
 * Signature: ([B)Ljava/lang/String;
 */
JNIEXPORT jstring JNICALL Java_AlexandriaJNI_toBase58
      (JNIEnv *, jclass, jbyteArray);

/*
 * Class:     AlexandriaJNI
 * Method:    fromBase58
 * Signature: (Ljava/lang/String;)[B
 */
JNIEXPORT jbyteArray JNICALL Java_AlexandriaJNI_fromBase58
      (JNIEnv *, jclass, jstring);

#ifdef __cplusplus
}
#endif
#endif
